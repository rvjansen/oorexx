<section id="errorlist">
<title>Error List</title>
<section id="ERR3">
<title>Error 3 - Failure during initialization</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The REXX program could not be read from the disk.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Failure during initialization: File "<emphasis role="italic">filename</emphasis>" is unreadable</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Failure during initialization: Program "<emphasis role="italic">program</emphasis>" was not found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Error writing output file "<emphasis role="italic">file</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Program "<emphasis role="italic">program_name</emphasis>" cannot be run by this version of the REXX interpreter</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Failure during initialization: Program "<emphasis role="italic">program</emphasis>" needs to be tokenized. To run untokenized scripts you need a full version of Object REXX.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR4">
<title>Error 4 - Program interrupted</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The system interrupted the execution of your program because of an error or a user request.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Program interrupted with <emphasis role="italic">condition</emphasis> condition</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR5">
<title>Error 5 - System resources exhausted</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>While trying to execute a program, the language processor was unable to get the resources it needed to continue. For example, it could not get the space needed for its work areas or variables. The program that called the language processor might itself have already used up most of the available storage.  Or a request for storage might have been for more than the implementation maximum.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR6">
<title>Error 6 - Unmatched "/*" or quote</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A comment or literal string was started but never finished. This could be because the language processor detected:
    <itemizedlist>
    <listitem>
<para>The end of the program (or the end of the string in an INTERPRET instruction) without finding the ending "*/" for a comment or the ending quotation mark for a literal string</para>
</listitem>
    <listitem>
<para>The end of the line for a literal string.</para>
</listitem>
    </itemizedlist>
    </para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Unmatched comment delimiter ("/*") on line <emphasis role="italic">line_number</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Unmatched single quote (')</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Unmatched double quote (")</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR7">
<title>Error 7 - WHEN or OTHERWISE expected</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>At least one WHEN construct (and possibly an OTHERWISE clause)
is expected within a SELECT instruction.  This message is issued if any
other instruction is found or there is no WHEN construct before the
OTHERWISE or all WHEN expressions are false and an OTHERWISE is not
present. A common cause of this error is if you forget the DO and END
around the list of instructions following a WHEN. For example:</para>
<programlisting>
WRONG                  RIGHT

Select                 Select
When a=c then          When a=c then DO
Say 'A equals C'       Say 'A equals C'
exit                   exit
Otherwise nop            end
end                    Otherwise nop
end
</programlisting>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>SELECT on line <emphasis role="italic">line_number</emphasis> requires WHEN</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>SELECT on line <emphasis role="italic">line_number</emphasis> requires WHEN, OTHERWISE, or END</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>All WHEN expressions of SELECT are false; OTHERWISE expected</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR8">
<title>Error 8 - Unexpected THEN or ELSE</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A THEN or an ELSE clause was found that does not match a
corresponding IF or WHEN clause. This often occurs because of a
missing END or DO...END in the THEN part of a complex IF...THEN...ELSE
construction. For example:</para>
<programlisting>
WRONG                     RIGHT

If a=c then do;           If a=c then do;
Say EQUALS                Say EQUALS
exit                      exit
else                        end
Say NOT EQUALS            else
Say NOT EQUALS
</programlisting>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>THEN has no corresponding IF or WHEN clause</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>ELSE has no corresponding THEN clause</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR9">
<title>Error 9 - Unexpected WHEN or OTHERWISE</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A WHEN or OTHERWISE was found outside of a SELECT construction.  You might have accidentally enclosed the instruction in a DO...END construction by leaving out an END, or you might have tried to branch to it with a SIGNAL instruction (which does not work because the SELECT is then ended).</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>WHEN has no corresponding SELECT</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>OTHERWISE has no corresponding SELECT</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR10">
<title>Error 10 - Unexpected or unmatched END</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>More ENDs were found in your program than DO, LOOP, or SELECT instructions, or the ENDs did not match the DO, LOOP, or SELECT instructions. This message also occurs if you try to transfer control into the middle of a loop using SIGNAL. In this case, the language processor does not expect the END because it did not process the previous DO instruction. Remember also that SIGNAL deactivates any current loops, so it cannot transfer control from one place inside a loop to another.</para>
<para>Another cause for this message is placing an END immediately after a THEN or ELSE subkeyword or specifying a name on the END keyword that does not match the name following DO or LOOP. Putting the name of the control variable on ENDs that close repetitive loops can also help locate this kind of error.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>END has no corresponding DO, LOOP, or SELECT</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Symbol following END ("<emphasis role="italic">symbol</emphasis>") must match block specification name ("<emphasis role="italic">control_variable</emphasis>") on line <emphasis role="italic">line_number</emphasis> or be omitted</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>END corresponding to block on line <emphasis role="italic">symbol</emphasis> must not have a symbol following it because there is no LABEL or control variable; found "<emphasis role="italic">line_number</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Symbol following END ("<emphasis role="italic">symbol</emphasis>") must match LABEL of SELECT specification ("<emphasis role="italic">control_variable</emphasis>") on line <emphasis role="italic">line_number</emphasis> or be omitted</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>END must not immediately follow THEN</para>
</listitem>
</varlistentry>
<varlistentry>
<term>006</term>
<listitem>
<para>END must not immediately follow ELSE</para>
</listitem>
</varlistentry>
<varlistentry>
<term>007</term>
<listitem>
<para>END corresponding to SELECT on line <emphasis role="italic">symbol</emphasis> must not have a symbol following it because there is no LABEL; found "<emphasis role="italic">line_number</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR11">
<title>Error 11 - Control stack full</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>Your program exceeds the nesting level limit for control structures (for example, DO...END and IF...THEN...ELSE). This could be because of a looping INTERPRET instruction, such as:</para>
<programlisting>
    
      line='INTERPRET line'
      INTERPRET line
    
    </programlisting>
<para>These lines loop until they exceed the nesting level limit and the language processor issues this message. Similarly, a recursive subroutine or internal function that does not end correctly can loop until it causes this message.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Insufficient control stack space; cannot continue execution</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR13">
<title>Error 13 - Invalid character in program</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A character was found outside a literal (quoted) string that is not a whitespace character or one of the valid alphanumeric and special characters.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect character in program "<emphasis role="italic">character</emphasis>" ('<emphasis role="italic">hex_character</emphasis>'X)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR14">
<title>Error 14 - Incomplete DO/LOOP/SELECT/IF</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>At the end of the program or the string for an INTERPRET instruction, a DO, LOOP, or SELECT instruction was found without a matching END or an IF clause that is not followed by a THEN clause.  Putting the name of the control variable on each END closing a controlled loop can help locate this kind of error.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>DO instruction on line <emphasis role="italic">line_number</emphasis> requires matching END</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>SELECT instruction on line <emphasis role="italic">line_number</emphasis> requires matching END</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>THEN on line <emphasis role="italic">line_number</emphasis> must be followed by an instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>ELSE on line <emphasis role="italic">line_number</emphasis> must be followed by an instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>LOOP instruction on line <emphasis role="italic">line_number</emphasis> requires matching END</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>OTHERWISE on line <emphasis role="italic">line_number</emphasis> requires matching END</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR15">
<title>Error 15 - Invalid hexadecimal or binary string</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>Hexadecimal strings must not have leading or trailing whitespace characters and whitespace can only be embedded at byte boundaries.  Only the digits 0-9 and the letters a-f and A-F are allowed.  The following are valid hexadecimal strings: </para>
<programlisting>
    
        '13'x
        'A3C2 1c34'x
        '1de8'x
    
    </programlisting>
<para>Binary strings can have whitespace only at the boundaries of groups of four binary digits.  Only the digits 0 and 1 are allowed.  These are valid binary strings: </para>
<programlisting>
    
        '1011'b
        '110 1101'b
        '101101 11010011'b
    
    </programlisting>
<para>You might have mistyped one of the digits, for example, typing a letter O instead of the number 0. Or you might have used the one-character symbol X or B (the name of the variable X or B, respectively) after a literal string when the string is not intended as a hexadecimal or binary specification. In this case, use the explicit concatenation operator (||) to concatenate the string to the value of the symbol.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect location of whitespace character in position <emphasis role="italic">position</emphasis> in hexadecimal string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Incorrect location of whitespace character in position <emphasis role="italic">position</emphasis> in binary string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Only 0-9, a-f, A-F, and whitespace characters are valid in a hexadecimal string; found "<emphasis role="italic">character</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Only 0, 1, and whitespace characters are valid in a binary string; found "<emphasis role="italic">character</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR16">
<title>Error 16 - Label not found</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A SIGNAL instruction has been executed or an event for which a trap was set with SIGNAL ON has occurred, and the language processor could not find the label specified. You might have mistyped the label or forgotten to include it.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Label "<emphasis role="italic">label_name</emphasis>" not found</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR17">
<title>Error 17 - Unexpected PROCEDURE</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A PROCEDURE instruction was encountered at an incorrect position.  This could occur because no internal routines are active or because the PROCEDURE instruction was not the first instruction processed after the CALL instruction or function call. One cause for this error is dropping through to an internal routine, rather than calling it with a CALL instruction or a function call.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>PROCEDURE is valid only when it is the first instruction executed after an internal CALL or function invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>INTERPRET data must not contain PROCEDURE</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR18">
<title>Error 18 - THEN expected</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A THEN clause must follow each REXX IF or WHEN clause. The language processor found another clause before it found a THEN clause.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>IF instruction on line <emphasis role="italic">line_number</emphasis> requires matching THEN clause</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>WHEN instruction on line <emphasis role="italic">line_number</emphasis> requires matching THEN clause</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR19">
<title>Error 19 - String or symbol expected</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A symbol or string was expected after the CALL or SIGNAL keywords
but none was found. You might have omitted the string or symbol or inserted a
special character (such as a parenthesis).
    </para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>String or symbol expected after ADDRESS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>String or symbol expected after CALL keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>String or symbol expected after NAME keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>String or symbol expected after SIGNAL keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>006</term>
<listitem>
<para>String or symbol expected after TRACE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>007</term>
<listitem>
<para>String or symbol expected after PARSE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>String or symbol expected after ::CLASS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>String or symbol expected after ::METHOD keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>String or symbol expected after ::ROUTINE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>String or symbol expected after ::REQUIRES keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>String expected after EXTERNAL keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>String or symbol expected after METACLASS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>String or symbol expected after SUBCLASS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>String or symbol expected after INHERIT keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>String or symbol expected after tilde (~)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>String or symbol expected after superclass colon (:)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>String or symbol expected after STREAM keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>String or symbol expected after MIXINCLASS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>String or symbol expected as ::ATTRIBUTE directive name</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>String or symbol expected as ::CONSTANT directive name</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>String or symbol expected as ::CONSTANT value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>String or symbol expected as DIGITS value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>String or symbol expected as FUZZ value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>String or symbol expected as TRACE value</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR20">
<title>Error 20 - Symbol expected</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A symbol is expected after CALL ON, CALL OFF, END, ITERATE, LEAVE, NUMERIC, PARSE, SIGNAL ON, or SIGNAL OFF. Also, a list of symbols or variable references is expected after DROP, EXPOSE, and PROCEDURE EXPOSE. Either there was no symbol when one was required or the language processor found another token.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Symbol expected after DROP keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Symbol expected after EXPOSE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Symbol expected after PARSE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Symbol expected after PARSE VAR</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>NUMERIC must be followed by one of the keywords DIGITS, FORM, or FUZZ; found "<emphasis role="italic">symbol</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Symbol expected after "(" of a variable reference</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Symbol expected after LEAVE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Symbol expected after ITERATE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Symbol expected after END keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Symbol expected after ON keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>Symbol expected after OFF keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Symbol expected after USE ARG</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Symbol expected after RAISE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>Symbol expected after USER keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Symbol expected after ::</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Symbol expected after superclass colon (:)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Symbol expected after LABEL keyword</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR21">
<title>Error 21 - Invalid data on end of clause</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A clause such as SELECT or NOP is followed by a token other than a comment.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Data must not follow the NOP keyword; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Data must not follow the SELECT keyword; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Data must not follow the NAME keyword; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Data must not follow the condition name; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>Data must not follow the SIGNAL label name; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Data must not follow the TRACE setting; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Data must not follow the LEAVE control variable name; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Data must not follow the ITERATE control variable name; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Data must not follow the END control variable name; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Data must not follow the NUMERIC FORM specification; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>Data must not follow the GUARD OFF specification; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Data must not follow the ::CONSTANT value; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR22">
<title>Error 22 - Invalid character string</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A literal string contains character codes that are not valid.  This might be because some characters are not possible, or because the character set is extended and certain character combinations are not allowed.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect character string "<emphasis role="italic">character_string</emphasis>" ('<emphasis role="italic">hex_string</emphasis>'X)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Incorrect double-byte character</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR23">
<title>Error 23 - Invalid data string</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A data string (that is, the result of an expression) contains character codes that are not valid. This might be because some characters are not possible, or because the character set is extended and certain character combinations are not allowed.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect data string "<emphasis role="italic">string</emphasis>" ('<emphasis role="italic">hex_string</emphasis>'X)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR24">
<title>Error 24 - Invalid TRACE request</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>This message is issued when:
    <itemizedlist>
    <listitem>
<para>The option on a TRACE instruction or the argument to the built-in function does not start with A, C, E, F, I, L, N, O, or R.</para>
</listitem>
    <listitem>
<para>In interactive debugging, you entered a number that is not a whole number.</para>
</listitem>
    </itemizedlist>
    </para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>TRACE request letter must be one of "ACEFILNOR"; found  "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Numeric TRACE requests are valid only from interactive debugging</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR25">
<title>Error 25 - Invalid subkeyword found</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An unexpected token was found at his position of an instruction where a particular subkeyword was expected. For example, in a NUMERIC instruction, the second token must be DIGITS, FUZZ, or FORM.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>CALL ON must be followed by one of the keywords ERROR, FAILURE, HALT, NOTREADY, USER, or ANY; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>CALL OFF must be followed by one of the keywords ERROR, FAILURE, HALT, NOTREADY, USER, or ANY; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>SIGNAL ON must be followed by one of the keywords ERROR, FAILURE, HALT, LOSTDIGITS, NOTREADY, NOMETHOD, NOSTRING, NOVALUE, SYNTAX, USER, or ANY; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>SIGNAL OFF must be followed by one of the keywords ERROR, FAILURE, HALT, LOSTDIGITS, NOTREADY, NOMETHOD, NOSTRING, NOVALUE, SYNTAX, USER, or ANY; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>011</term>
<listitem>
<para>NUMERIC FORM must be followed by one of the keywords SCIENTIFIC or ENGINEERING; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>012</term>
<listitem>
<para>PARSE must be followed by one of the keywords ARG, LINEIN, PULL, SOURCE, VALUE, VAR, or VERSION; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>015</term>
<listitem>
<para>NUMERIC must be followed by one of the keywords DIGITS, FORM, or FUZZ; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>017</term>
<listitem>
<para>PROCEDURE must be followed by the keyword EXPOSE or nothing; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Unknown keyword on ::CLASS directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Unknown keyword on ::METHOD directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Unknown keyword on ::ROUTINE directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Unknown keyword on ::REQUIRES directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>USE must be followed by the keyword ARG; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>RAISE must be followed by one of the keywords ERROR, FAILURE, HALT, LOSTDIGITS, NOMETHOD, NOSTRING, NOTREADY, NOVALUE, SYNTAX, or USER; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Unknown keyword on RAISE instruction; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Duplicate DESCRIPTION keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Duplicate ADDITIONAL or ARRAY keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Duplicate RETURN or EXIT keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>GUARD ON or GUARD OFF must be followed by the keyword WHEN; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>GUARD must be followed by the keyword ON or OFF; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>CALL ON condition must be followed by the keyword NAME; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>SIGNAL ON condition must be followed by the keyword NAME; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Unknown keyword on FORWARD instruction; found "<emphasis role="italic">keyword</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Duplicate TO keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Duplicate ARGUMENTS or ARRAY keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Duplicate RETURN or CONTINUE keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>921</term>
<listitem>
<para>Duplicate CLASS keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>922</term>
<listitem>
<para>Duplicate MESSAGE keyword found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>923</term>
<listitem>
<para>SELECT must be followed by the keyword LABEL; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>924</term>
<listitem>
<para>Unknown keyword on ::OPTIONS directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>925</term>
<listitem>
<para>Unknown keyword on ::ATTRIBUTE directive; found "<emphasis role="italic">word</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR26">
<title>Error 26 - Invalid whole number</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An expression was found that did not evaluate to a whole number or is greater than the limit (the default is 999,999,999 for 32-bit system
    and 999,999,999,999,999,999 for 64-bit systems):
    <itemizedlist>
    <listitem>
<para>The positional patterns in parsing templates (including variable positional patterns)</para>
</listitem>
    <listitem>
<para>The operand to the right of the power operator</para>
</listitem>
    <listitem>
<para>The values of exprr and exprf in the DO instruction</para>
</listitem>
    <listitem>
<para>The values given for DIGITS or FUZZ in the NUMERIC instruction</para>
</listitem>
    <listitem>
<para>The number used in the option of the TRACE setting This error is also raised if the value is not permitted (for example, a negative repetition count in a DO instruction), or the division performed during an integer divide or remainder operation does not result in a whole number.</para>
</listitem>
    </itemizedlist>
    </para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>002</term>
<listitem>
<para>Value of repetition count expression in DO instruction must be zero or a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Value of FOR expression in DO instruction must be zero or a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Positional pattern of PARSE template must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>DIGITS value must be a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>006</term>
<listitem>
<para>FUZZ value must be zero or a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>007</term>
<listitem>
<para>Number used in TRACE setting must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>008</term>
<listitem>
<para>Operand to the right of the power operator (**) must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>011</term>
<listitem>
<para>Result of % operation did not result in a whole number</para>
</listitem>
</varlistentry>
<varlistentry>
<term>012</term>
<listitem>
<para>Result of // operation did not result in a whole number</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Result of a method call did not result in a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Result of a COMPARETO method call did not result in a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Result of a COMPARE method call did not result in a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR27">
<title>Error 27 - Invalid DO syntax</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A syntax error was found in the DO instruction.  You probably used BY, TO, FOR, WHILE, or UNTIL twice, used a WHILE and an UNTIL, or used BY, TO, or FOR when there is no control variable specified.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>WHILE and UNTIL keywords cannot be used on the same DO loop</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Incorrect data following FOREVER keyword on the DO loop; found "<emphasis role="italic">data</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>DO keyword <emphasis role="italic">keyword</emphasis> can be specified only once</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR28">
<title>Error 28 - Invalid LEAVE or ITERATE</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A LEAVE or ITERATE instruction was found at an incorrect position.  Either no loop was active, or the name specified on the instruction did not match the control variable of any active loop. Note that internal routine calls and the INTERPRET instruction protect DO loops by making them inactive. Therefore, for example, a LEAVE instruction in a subroutine cannot affect a DO loop in the calling routine. You probably tried to use the SIGNAL instruction to transfer control within or into a loop. Because a SIGNAL instruction ends all active loops, any ITERATE or LEAVE instruction causes this message.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>LEAVE is valid only within a repetitive loop or labeled block instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>ITERATE is valid only within a repetitive loop</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Symbol following LEAVE ("<emphasis role="italic">symbol</emphasis>") must either match the label of a current loop or block instruction.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Symbol following ITERATE ("<emphasis role="italic">symbol</emphasis>") must either match the label of a current loop or be omitted</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>Symbol following ITERATE ("<emphasis role="italic">symbol</emphasis>") does not match a repetitive block instruction</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR29">
<title>Error 29 - Environment name too long</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The environment name specified on the ADDRESS instruction is longer than permitted for the system under which the interpreter is running.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Environment name exceeds <emphasis role="italic">limit</emphasis> characters; found "<emphasis role="italic">environment_name</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR30">
<title>Error 30 - Name or string too long</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A variable name, label name, literal (quoted) string has exceeded the allowed limit of 250 characters. The limit for names includes any substitutions. A possible cause of this error is if you use a period (.) in a name, causing an unexpected substitution. Leaving off an ending quotation mark for a literal string, or putting a single quotation mark in a string, can cause this error because several clauses can be included in the string. For example, write the string 'don't' as 'don't' or "don't".</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Name exceeds 250 characters:  "<emphasis role="italic">name</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Literal string exceeds 250 characters:  "<emphasis role="italic">string</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Hexadecimal literal string exceeds 250 characters "<emphasis role="italic">string</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Binary literal string exceeds 250 characters "<emphasis role="italic">string</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR31">
<title>Error 31 - Name starts with number or "."</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A variable was found whose name begins with a numeric digit or a period.  You cannot assign a value to such a variable because you could then redefine numeric constants.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>A value cannot be assigned to a number; found "<emphasis role="italic">number</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Variable symbol must not start with a number; found "<emphasis role="italic">symbol</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Variable symbol must not start with a "."; found "<emphasis role="italic">symbol</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR33">
<title>Error 33 - Invalid expression result</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The result of an expression was found not to be valid in the context in which it was used.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Value of NUMERIC DIGITS ("<emphasis role="italic">value</emphasis>") must exceed value of NUMERIC FUZZ ("<emphasis role="italic">value</emphasis>")</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Value of NUMERIC DIGITS ("<emphasis role="italic">value</emphasis>") must not exceed <emphasis role="italic">value</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Incorrect expression result following VALUE keyword of ADDRESS instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Incorrect expression result following VALUE keyword of SIGNAL instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Incorrect expression result following VALUE keyword of TRACE instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Incorrect expression result following SYNTAX keyword of RAISE instruction</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR34">
<title>Error 34 - Logical value not 0 or 1</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An expression was found in an IF, WHEN, DO WHILE, or DO UNTIL phrase that did not result in a 0 or 1. Any value operated on by a logical operator must result in a 0 or 1. For example, the phrase If result then exit rc fails if result has a value other than 0 or 1.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Value of expression following IF keyword must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Value of expression following WHEN keyword must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Value of expression following WHILE keyword must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Value of expression following UNTIL keyword must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>Value of expression to the left of the logical operator "<emphasis role="italic">operator</emphasis>" must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>006</term>
<listitem>
<para>Value of logical list expression element must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Logical value must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Value of expression following GUARD keyword must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Authorization return value must be exactly "0" or "1"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Property logical value must be exactly "0", "1", "true", or "false"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR35">
<title>Error 35 - Invalid expression</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An expression contains a grammatical error. Possible causes:
    <itemizedlist>
    <listitem>
<para>An expression is missing when one is required</para>
</listitem>
    <listitem>
<para>You ended an expression with an operator</para>
</listitem>
    <listitem>
<para>You specified, in an expression, two operators next to one another with nothing in between them</para>
</listitem>
    <listitem>
<para>You did not specify a right parenthesis when one was required</para>
</listitem>
    <listitem>
<para>You used special characters (such as operators) in an intended character expression without enclosing them in quotation marks</para>
</listitem>
    </itemizedlist>
    </para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect expression detected at "<emphasis role="italic">token</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Prefix operator "<emphasis role="italic">operator</emphasis>" is not followed by an expression term</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Missing conditional expression following IF keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Missing conditional expression following WHEN keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Missing initial expression for DO control variable</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>Missing expression following BY keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Missing expression following TO keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Missing expression following FOR keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Missing expression following WHILE keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Missing expression following UNTIL keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Missing expression following OVER keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>Missing expression following INTERPRET keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Missing expression following OPTIONS keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Missing expression following VALUE keyword of an ADDRESS instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>Missing expression following VALUE keyword of a SIGNAL instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Missing expression following VALUE keyword of a TRACE instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Missing expression following VALUE keyword of a NUMERIC FORM instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Missing expression following assignment instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Operator "<emphasis role="italic">operator</emphasis>" is not followed by an expression term</para>
</listitem>
</varlistentry>
<varlistentry>
<term>921</term>
<listitem>
<para>Missing expression following GUARD keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>922</term>
<listitem>
<para>Missing expression following DESCRIPTION keyword of a RAISE instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>923</term>
<listitem>
<para>Missing expression following ADDITIONAL keyword of a RAISE instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>924</term>
<listitem>
<para>Missing "(" on expression list of the ARRAY keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>925</term>
<listitem>
<para>Missing expression following TO keyword of a FORWARD instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>926</term>
<listitem>
<para>Missing expression following ARGUMENTS keyword of a FORWARD instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>927</term>
<listitem>
<para>Missing expression following MESSAGE keyword of a FORWARD instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>928</term>
<listitem>
<para>Missing expression following CLASS keyword of a FORWARD instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>929</term>
<listitem>
<para>Missing expression in logical expression list</para>
</listitem>
</varlistentry>
<varlistentry>
<term>930</term>
<listitem>
<para>Missing expression following "=" token of a USE STRICT ARG instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>931</term>
<listitem>
<para>Missing expression following ( of parse template</para>
</listitem>
</varlistentry>
<varlistentry>
<term>932</term>
<listitem>
<para>Missing expression for calculated CALL name</para>
</listitem>
</varlistentry>
<varlistentry>
<term>933</term>
<listitem>
<para>Missing expression following CASE keyword of a SELECT instruction</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR36">
<title>Error 36 - Unmatched "(" or "[" in expression</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A matched parenthesis or bracket was found within an expression. There are more left parentheses than right parentheses or more left brackets than right brackets. To include a single parenthesis in a command, enclose it in quotation marks.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Left parenthesis "(" in position <emphasis role="italic">position</emphasis> on line <emphasis role="italic">line_number</emphasis> requires a corresponding right parenthesis ")"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Square bracket "[" in position <emphasis role="italic">position</emphasis> on line <emphasis role="italic">line_number</emphasis> requires a corresponding right square bracket "]"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR37">
<title>Error 37 - Unexpected ",", ")", or "]"</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>Either a comma was found outside a function invocation, or there are too many right parentheses or right square brackets in an expression. To include a comma in a character expression, enclose it in quotation marks.  For example, write the instruction: </para>
<programlisting>
       Say Enter A, B, or C
    </programlisting>
<para>as follows:</para>
<programlisting>
       Say 'Enter A, B, or C'
    </programlisting>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Unexpected ","</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Unmatched ")" in expression</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Unexpected "]"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR38">
<title>Error 38 - Invalid template or pattern</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A special character that is not allowed within a parsing template (for example, "%") has been found, or the syntax of a variable pattern is incorrect (that is, no symbol was found after a left parenthesis). This message is also issued if you omit the WITH subkeyword in a PARSE VALUE instruction.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Incorrect PARSE template detected at "<emphasis role="italic">column_position</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Incorrect PARSE position detected at "<emphasis role="italic">column_position</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>PARSE VALUE instruction requires WITH keyword</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Missing PARSE relative position</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR39">
<title>Error 39 - Evaluation stack overflow</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The expression is too complex to be evaluated by the language processor.</para>
</section>
<section id="ERR40">
<title>Error 40 - Incorrect call to routine</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An incorrect call to a routine was found. Possible causes:
    <itemizedlist>
    <listitem>
<para>You passed incorrect data (arguments) to the built-in or external routine.</para>
</listitem>
    <listitem>
<para>You passed too many arguments to the built-in, external, or internal routine.</para>
</listitem>
    <listitem>
<para>The external routine called was not compatible with the language processor.</para>
</listitem>
    </itemizedlist>
    If you did not try to call a routine, you might have a symbol or a string adjacent to a "(" when you meant it to be separated by a blank or other operator. The language processor would treat this as a function call.  For example, write TIME(4+5) as follows: TIME*(4+5)</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>External routine "<emphasis role="italic">routine</emphasis>" failed</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Not enough arguments in invocation of <emphasis role="italic">routine</emphasis>; minimum expected is <emphasis role="italic">number</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Too many arguments in invocation of <emphasis role="italic">routine</emphasis>; maximum expected is <emphasis role="italic">number</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>Missing argument in invocation of <emphasis role="italic">routine</emphasis>; argument <emphasis role="italic">argument_number</emphasis> is required</para>
</listitem>
</varlistentry>
<varlistentry>
<term>011</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>012</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>013</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be zero or positive; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>014</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be positive; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>019</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument 2, "<emphasis role="italic">value</emphasis>", is not in the format described by argument 3, "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>021</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must not be a null string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>022</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a single character or null; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>023</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a single character; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>024</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a binary string; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>025</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a hexadecimal string; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>026</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a valid symbol; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>027</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument 1 must be a valid stream name; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>029</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> conversion to format "<emphasis role="italic">value</emphasis>" is not allowed</para>
</listitem>
</varlistentry>
<varlistentry>
<term>032</term>
<listitem>
<para>RANDOM difference between argument 1 ("<emphasis role="italic">value</emphasis>") and argument 2 ("<emphasis role="italic">value</emphasis>") must not exceed 999,999,999</para>
</listitem>
</varlistentry>
<varlistentry>
<term>033</term>
<listitem>
<para>RANDOM argument 1 ("<emphasis role="italic">argument</emphasis>") must be less than or equal to argument 2 ("<emphasis role="italic">argument</emphasis>")</para>
</listitem>
</varlistentry>
<varlistentry>
<term>034</term>
<listitem>
<para>SOURCELINE argument 1 ("<emphasis role="italic">argument</emphasis>") must be less than or equal to the number of lines in the program (<emphasis role="italic">argument</emphasis>)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>035</term>
<listitem>
<para>X2D argument 1 cannot be expressed as a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>043</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">number</emphasis> must be a single non-alphanumeric character or the null string; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>044</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">number</emphasis>, "<emphasis role="italic">value</emphasis>", is a format incompatible with the separator specified in argument <emphasis role="italic">number</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Result returned by <emphasis role="italic">routine</emphasis> is longer than <emphasis role="italic">length</emphasis>:  "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must not exceed the whole number limit.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be in the range 0-99; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be one of <emphasis role="italic">values</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>TRACE setting letter must be one of "ACEFILNOR"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must be a single-dimensional array; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> argument <emphasis role="italic">argument_number</emphasis> must have a string value; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Unknown VALUE function variable environment selector; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>
<emphasis role="italic">function_name</emphasis> cannot be used with QUEUE:</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Cannot read from a write-only property.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Cannot write to a read-only property or typelib element.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Invalid native function signature specification</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must have a stem object or stem name value; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR41">
<title>Error 41 - Bad arithmetic conversion</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A term in an arithmetic expression is not a valid number or has an exponent outside the allowed range of whole number range.</para>
<para>You might have mistyped a variable name, or included an arithmetic operator in a character expression without putting it in quotation marks.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Nonnumeric value ("<emphasis role="italic">value</emphasis>") used in arithmetic operation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Nonnumeric value ("<emphasis role="italic">value</emphasis>") used with prefix operator</para>
</listitem>
</varlistentry>
<varlistentry>
<term>004</term>
<listitem>
<para>Value of TO expression of DO instruction must be numeric; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>005</term>
<listitem>
<para>Value of BY expression of DO instruction must be numeric; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>006</term>
<listitem>
<para>Value of control variable expression of DO instruction must be numeric; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>007</term>
<listitem>
<para>Exponent exceeds <emphasis role="italic">number</emphasis> digits; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Value of RAISE instruction SYNTAX expression must be numeric; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR42">
<title>Error 42 - Arithmetic overflow/underflow</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The result of an arithmetic operation requires an exponent that is greater than the platform limit of nine digits.</para>
<para>This error can occur during the evaluation of an expression (often as a result of trying to divide a number by 0) or while stepping a DO loop control variable.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Arithmetic overflow detected at:  "<emphasis role="italic">value</emphasis>
<emphasis role="italic">operator</emphasis>
<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>Arithmetic underflow detected at:  "<emphasis role="italic">value</emphasis>
<emphasis role="italic">operator</emphasis>
<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>003</term>
<listitem>
<para>Arithmetic overflow; divisor must not be zero</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Arithmetic overflow; exponent ("<emphasis role="italic">exponent</emphasis>") exceeds <emphasis role="italic">number</emphasis> digits</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Arithmetic underflow; exponent ("<emphasis role="italic">exponent</emphasis>") exceeds <emphasis role="italic">number</emphasis> digits</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Arithmetic underflow; zero raised to a negative power</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR43">
<title>Error 43 - Routine not found</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A function has been invoked within an expression or a subroutine has been invoked by a CALL, but it cannot be found. Possible reasons:
    <itemizedlist>
    <listitem>
<para>The specified label is not in the program</para>
</listitem>
    <listitem>
<para>It is not the name of a built-in function</para>
</listitem>
    <listitem>
<para>The language processor could not locate it externally</para>
</listitem>
    </itemizedlist>
    Check if you mistyped the name.</para>
<para>If you did not try to call a routine, you might have put a symbol or string adjacent to a "(" when you meant it to be separated by a blank or another operator. The language processor then treats it as a function call. For example, write the string 3(4+5) as 3*(4+5).</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Could not find routine "<emphasis role="italic">routine</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Could not find routine "<emphasis role="italic">routine</emphasis>" for ::REQUIRES</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR44">
<title>Error 44 - Function or message did not return data</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The language processor called an external routine within an expression.  The routine seemed to end without error, but it did not return data for use in the expression. </para>
<para>You might have specified the name of a program that is not intended for use as a REXX function. Call it as a command or subroutine instead.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>No data returned from function "<emphasis role="italic">function</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR45">
<title>Error 45 - No data specified on function RETURN</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A REXX program has been called as a function, but returned without passing back any data.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Data expected on RETURN instruction because routine "<emphasis role="italic">routine</emphasis>" was called as a function</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR46">
<title>Error 46 - Invalid variable reference</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>Within an ARG, DROP, EXPOSE, PARSE, PULL, or PROCEDURE instruction, the syntax of a variable reference (a variable whose value is to be used, indicated by its name being enclosed in parentheses) is incorrect. The right parenthesis that must immediately follow the variable name might be missing or the variable name might be misspelled.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Extra token ("<emphasis role="italic">token</emphasis>") found in variable reference list; ")" expected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Missing ")" in variable reference</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Extra token ("<emphasis role="italic">token</emphasis>") found in USE ARG variable reference; "," or end of instruction expected</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR47">
<title>Error 47 - Unexpected label</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A label was used in the expression being evaluated for an INTERPRET instruction or in an expression entered during interactive debugging.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>INTERPRET data must not contain labels; found "<emphasis role="italic">label</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR48">
<title>Error 48 - Failure in system service</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The language processor stopped processing the program because a system service, such as stream input or output or the manipulation of the external data queue, has failed to work correctly.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Failure in system service: <emphasis role="italic">service</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR49">
<title>Error 49 - Interpretation error</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A severe error was detected in the language processor or execution process during internal self-consistency checks.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Interpretation error: unexpected failure initializing the interpreter</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR88">
<title>Error 88 - Invalid argument</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An argument passed to a method, function, or routine was not valid.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Missing argument; argument <emphasis role="italic">argument</emphasis> is required</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be a number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be zero or a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must not exceed <emphasis role="italic">limit</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be in the range <emphasis role="italic">min</emphasis> to <emphasis role="italic">max</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must not be a null string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must have a string value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>910</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> is an incorrect pad or character argument; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> is an incorrect length argument; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> is an incorrect position argument; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must have a single-dimensional array value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be of the <emphasis role="italic">class</emphasis> class</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> could not be converted to type <emphasis role="italic">type</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be one of <emphasis role="italic">values</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> <emphasis role="italic">reason</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> is not in a valid format; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> is not in valid pointer format; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>920</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must have a stem object or stem name value; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>921</term>
<listitem>
<para>Argument <emphasis role="italic">argument</emphasis> must be a valid double value; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>922</term>
<listitem>
<para>Too many arguments in invocation; <emphasis role="italic">number</emphasis> expected</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR89">
<title>Error 89 - Variable or message term expected</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An instruction was expecting either a single Rexx variable symbol or a message term to be used for an assignment.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>The USE instruction requires a comma-separated list of variables or assignment message terms</para>
</listitem>
</varlistentry>
<varlistentry>
<term>002</term>
<listitem>
<para>The PARSE was expecting a variable or a message term.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR90">
<title>Error 90 - External name not found</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An external class, method, or routine (specified with the EXTERNAL option on a ::CLASS, ::METHOD, or ::ROUTINE directive, or as a second argument on a NEW message to the Method class) cannot be found.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>997</term>
<listitem>
<para>Unable to find external class "<emphasis role="italic">class</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>998</term>
<listitem>
<para>Unable to find external method "<emphasis role="italic">method</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>999</term>
<listitem>
<para>Unable to find external routine "<emphasis role="italic">routine</emphasis>"</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR91">
<title>Error 91 - No result object</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>A message term requires a result object, but the method did not return one.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>999</term>
<listitem>
<para>Message "<emphasis role="italic">message</emphasis>" did not return a result</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR92">
<title>Error 92 - OLE error</title>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>An unknown OLE error occurred (HRESULT=<emphasis role="italic">hresult</emphasis>).</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Cannot convert OLE VARIANT to REXX object: The conversion of the VARIANT type <emphasis role="italic">varianttype</emphasis> into a REXX object failed.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Cannot convert REXX object to OLE VARIANT: The conversion of <emphasis role="italic">rexx_object</emphasis> into a VARIANT failed.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>The number of elements provided to the method or property is different from the number of parameters accepted by it.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>One of the parameters is not a valid VARIANT type.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>OLE exception: <emphasis role="italic">exc_name</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>The requested method does not exist, or you tried to set the value of a read-only property.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>One of the parameters could not be coerced to the desired type.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>One or more of the parameters could not be coerced to the desired type. The first parameter with incorrect type is argument <emphasis role="italic">index</emphasis>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>910</term>
<listitem>
<para>A required parameter was omitted.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Could not create OLE instance.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>The object invoked has disconnected from its clients.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR93">
<title>Error 93 - Incorrect call to method</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The specified method, built-in function, or external routine exists, but you used it incorrectly.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Not enough arguments for method; <emphasis role="italic">number</emphasis> expected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Too many arguments in invocation of method; <emphasis role="italic">number</emphasis> expected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Missing argument in method; argument <emphasis role="italic">argument</emphasis> is required</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be zero or a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a positive whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must not exceed <emphasis role="italic">limit</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be in the range 0-99; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must not be null</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a hexadecimal string; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a valid symbol; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be one of <emphasis role="italic">arguments</emphasis>; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>Method option must be one of "<emphasis role="italic">arguments</emphasis>"; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must have a string value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Method <emphasis role="italic">method</emphasis> does not exist</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>Incorrect list index "<emphasis role="italic">index</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Incorrect array position "<emphasis role="italic">position</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>921</term>
<listitem>
<para>Argument missing on binary operator</para>
</listitem>
</varlistentry>
<varlistentry>
<term>922</term>
<listitem>
<para>Incorrect pad or character argument specified; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>923</term>
<listitem>
<para>Incorrect length argument specified; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>924</term>
<listitem>
<para>Incorrect position argument specified; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>925</term>
<listitem>
<para>Not enough subscripts for array; <emphasis role="italic">number</emphasis> expected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>926</term>
<listitem>
<para>Too many subscripts for array; <emphasis role="italic">number</emphasis> expected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>927</term>
<listitem>
<para>Length must be specified to convert a negative value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>928</term>
<listitem>
<para>D2X value must be a valid whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>929</term>
<listitem>
<para>D2C value must be a valid whole number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>931</term>
<listitem>
<para>Incorrect location of whitespace character in position <emphasis role="italic">position</emphasis> in hexadecimal string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>932</term>
<listitem>
<para>Incorrect location of whitespace character in position <emphasis role="italic">position</emphasis> in binary string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>933</term>
<listitem>
<para>Only 0-9, a-f, A-F, and whitespace characters are valid in a hexadecimal string; character found "<emphasis role="italic">character</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>934</term>
<listitem>
<para>Only 0, 1, and whitespace characters are valid in a binary string; character found "<emphasis role="italic">character</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>935</term>
<listitem>
<para>X2D result is not a valid whole number with NUMERIC DIGITS <emphasis role="italic">digits</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>936</term>
<listitem>
<para>C2D result is not a valid whole number with NUMERIC DIGITS <emphasis role="italic">digits</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>937</term>
<listitem>
<para>No more supplier items available</para>
</listitem>
</varlistentry>
<varlistentry>
<term>938</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must have a string value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>939</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must have a single-dimensional array value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>941</term>
<listitem>
<para>Exponent "<emphasis role="italic">exponent</emphasis>" is too large for <emphasis role="italic">number</emphasis> spaces</para>
</listitem>
</varlistentry>
<varlistentry>
<term>942</term>
<listitem>
<para>Integer part "<emphasis role="italic">integer</emphasis>" is too large for <emphasis role="italic">number</emphasis> spaces</para>
</listitem>
</varlistentry>
<varlistentry>
<term>943</term>
<listitem>
<para>
<emphasis role="italic">method</emphasis> method target must be a number; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>944</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be a message object</para>
</listitem>
</varlistentry>
<varlistentry>
<term>945</term>
<listitem>
<para>Missing argument in message array; argument <emphasis role="italic">argument</emphasis> is required</para>
</listitem>
</varlistentry>
<varlistentry>
<term>946</term>
<listitem>
<para>A message array must be a single-dimensional array with 2 elements</para>
</listitem>
</varlistentry>
<varlistentry>
<term>947</term>
<listitem>
<para>Method SECTION can be used only on single-dimensional arrays</para>
</listitem>
</varlistentry>
<varlistentry>
<term>948</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must be of the <emphasis role="italic">class</emphasis> class</para>
</listitem>
</varlistentry>
<varlistentry>
<term>949</term>
<listitem>
<para>The index and value objects must be the same for PUT to an index-only collection</para>
</listitem>
</varlistentry>
<varlistentry>
<term>951</term>
<listitem>
<para>Incorrect alarm time; found "<emphasis role="italic">time</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>952</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> is an array and does not contain all string values</para>
</listitem>
</varlistentry>
<varlistentry>
<term>953</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> could not be converted to type <emphasis role="italic">type</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>954</term>
<listitem>
<para>Method "<emphasis role="italic">method</emphasis>" can be used only on a single-dimensional array</para>
</listitem>
</varlistentry>
<varlistentry>
<term>956</term>
<listitem>
<para>Element <emphasis role="italic">element</emphasis> of the array must be a string</para>
</listitem>
</varlistentry>
<varlistentry>
<term>957</term>
<listitem>
<para>Element <emphasis role="italic">element</emphasis> of the array must be a subclass of the target object</para>
</listitem>
</varlistentry>
<varlistentry>
<term>958</term>
<listitem>
<para>Positioning of transient streams is not valid</para>
</listitem>
</varlistentry>
<varlistentry>
<term>959</term>
<listitem>
<para>An array cannot contain more than 99,999,999 elements</para>
</listitem>
</varlistentry>
<varlistentry>
<term>961</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must have a string value or an array value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>962</term>
<listitem>
<para>Invalid Base 64 encoded string.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>963</term>
<listitem>
<para>Call to unsupported or unimplemented method</para>
</listitem>
</varlistentry>
<varlistentry>
<term>964</term>
<listitem>
<para>Application error:  <emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>965</term>
<listitem>
<para>Method <emphasis role="italic">name</emphasis> is ABSTRACT and cannot be directly invoked</para>
</listitem>
</varlistentry>
<varlistentry>
<term>966</term>
<listitem>
<para>Incorrect queue index "<emphasis role="italic">index</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>967</term>
<listitem>
<para>NEW method is not supported for the <emphasis role="italic">name</emphasis> class</para>
</listitem>
</varlistentry>
<varlistentry>
<term>968</term>
<listitem>
<para>Invalid native method signature specification</para>
</listitem>
</varlistentry>
<varlistentry>
<term>969</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> must have a stem object value; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>970</term>
<listitem>
<para>COPY method is not supported for object <emphasis role="italic">object</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>971</term>
<listitem>
<para>Method argument <emphasis role="italic">argument</emphasis> cannot have more than a single dimension</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR97">
<title>Error 97 - Object method not found</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The object does not have a method with the given name.  A frequent cause of this error is an uninitialized variable.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>001</term>
<listitem>
<para>Object "<emphasis role="italic">object</emphasis>" does not understand message "<emphasis role="italic">message</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR98">
<title>Error 98 - Execution error</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The language processor detected a specific error during execution.  The associated error gives the reason for the error.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Unable to convert object "<emphasis role="italic">object</emphasis>" to a double-float value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Unable to load library "<emphasis role="italic">name</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Abnormal termination occurred</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>Deadlock detected on a guarded method</para>
</listitem>
</varlistentry>
<varlistentry>
<term>906</term>
<listitem>
<para>Incorrect object reference detected</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>Object of type "<emphasis role="italic">type</emphasis>" was required</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>Metaclass "<emphasis role="italic">metaclass</emphasis>" not found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>Class "<emphasis role="italic">class</emphasis>" not found</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>Cyclic inheritance in program "<emphasis role="italic">program</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>Unable to convert object "<emphasis role="italic">object</emphasis>" to a single-dimensional array value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>Unable to convert object "<emphasis role="italic">object</emphasis>" to a string value</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>A message object that was sent a START message cannot be sent another START, SEND, or REPLY message</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Message object "<emphasis role="italic">object</emphasis>" received an error from message "<emphasis role="italic">message</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Incorrect condition object received for RAISE OBJECT; found "<emphasis role="italic">value</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>No active condition available for PROPAGATE</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>Unable to convert object "<emphasis role="italic">object</emphasis>" to a method</para>
</listitem>
</varlistentry>
<varlistentry>
<term>935</term>
<listitem>
<para>REPLY can be issued only once per method invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>936</term>
<listitem>
<para>RETURN cannot return a value after a REPLY</para>
</listitem>
</varlistentry>
<varlistentry>
<term>937</term>
<listitem>
<para>EXIT cannot return a value after a REPLY</para>
</listitem>
</varlistentry>
<varlistentry>
<term>938</term>
<listitem>
<para>Message search overrides can be used only from methods of the target object</para>
</listitem>
</varlistentry>
<varlistentry>
<term>939</term>
<listitem>
<para>Additional information for SYNTAX errors must be a single-dimensional array of values</para>
</listitem>
</varlistentry>
<varlistentry>
<term>941</term>
<listitem>
<para>Unknown error number specified on RAISE SYNTAX; found "<emphasis role="italic">number</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>942</term>
<listitem>
<para>Class "<emphasis role="italic">class</emphasis>" must be a MIXINCLASS for INHERIT</para>
</listitem>
</varlistentry>
<varlistentry>
<term>943</term>
<listitem>
<para>Class "<emphasis role="italic">class</emphasis>" is not a subclass of "<emphasis role="italic">class</emphasis>" base class "<emphasis role="italic">class</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>944</term>
<listitem>
<para>Class "<emphasis role="italic">class</emphasis>" cannot inherit from itself, a superclass, or a subclass ("<emphasis role="italic">class</emphasis>")</para>
</listitem>
</varlistentry>
<varlistentry>
<term>945</term>
<listitem>
<para>Class "<emphasis role="italic">class</emphasis>" has not inherited class "<emphasis role="italic">class</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>946</term>
<listitem>
<para>FORWARD arguments must be a single-dimensional array of values</para>
</listitem>
</varlistentry>
<varlistentry>
<term>947</term>
<listitem>
<para>FORWARD can only be issued in an object method invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>948</term>
<listitem>
<para>Authorization failure:  <emphasis role="italic">value</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>951</term>
<listitem>
<para>Concurrency not supported</para>
</listitem>
</varlistentry>
<varlistentry>
<term>975</term>
<listitem>
<para>Missing array element at position <emphasis role="italic">position</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>976</term>
<listitem>
<para>Stem object default value cannot be another stem object</para>
</listitem>
</varlistentry>
<varlistentry>
<term>978</term>
<listitem>
<para>Unable to load method "<emphasis role="italic">name</emphasis>" from library "<emphasis role="italic">library</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>979</term>
<listitem>
<para>Unable to load routine "<emphasis role="italic">name</emphasis>" from library "<emphasis role="italic">library</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>980</term>
<listitem>
<para>Unable to load native routine "<emphasis role="italic">name</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>981</term>
<listitem>
<para>Target RexxContext is no longer active</para>
</listitem>
</varlistentry>
<varlistentry>
<term>982</term>
<listitem>
<para>Library "<emphasis role="italic">name</emphasis>" is not compatible with current interpreter version.</para>
</listitem>
</varlistentry>
<varlistentry>
<term>983</term>
<listitem>
<para>Execution thread does not match API thread context.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="ERR99">
<title>Error 99 - Translation error</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An error was detected in the language syntax. The associated error subcode identifies the syntax error.</para>
<para>The associated subcodes are: </para>
<variablelist>
<varlistentry>
<term>900</term>
<listitem>
<para>
<emphasis role="italic">message</emphasis>
</para>
</listitem>
</varlistentry>
<varlistentry>
<term>901</term>
<listitem>
<para>Duplicate ::CLASS directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>902</term>
<listitem>
<para>Duplicate ::METHOD directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>903</term>
<listitem>
<para>Duplicate ::ROUTINE directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>904</term>
<listitem>
<para>Duplicate ::REQUIRES directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>905</term>
<listitem>
<para>CLASS keyword on ::METHOD directive requires a matching ::CLASS directive</para>
</listitem>
</varlistentry>
<varlistentry>
<term>907</term>
<listitem>
<para>EXPOSE must be the first instruction executed after a method invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>908</term>
<listitem>
<para>INTERPRET data must not contain EXPOSE</para>
</listitem>
</varlistentry>
<varlistentry>
<term>909</term>
<listitem>
<para>GUARD must be the first instruction executed after EXPOSE or USE</para>
</listitem>
</varlistentry>
<varlistentry>
<term>911</term>
<listitem>
<para>GUARD can only be issued in an object method invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>912</term>
<listitem>
<para>INTERPRET data must not contain GUARD</para>
</listitem>
</varlistentry>
<varlistentry>
<term>913</term>
<listitem>
<para>GUARD instruction did not include references to exposed variables</para>
</listitem>
</varlistentry>
<varlistentry>
<term>914</term>
<listitem>
<para>INTERPRET data must not contain directive instructions</para>
</listitem>
</varlistentry>
<varlistentry>
<term>915</term>
<listitem>
<para>INTERPRET data must not contain USE</para>
</listitem>
</varlistentry>
<varlistentry>
<term>916</term>
<listitem>
<para>Unrecognized directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>917</term>
<listitem>
<para>Incorrect external directive name "<emphasis role="italic">method</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>918</term>
<listitem>
<para>USE ARG requires a "," between variable names; found "<emphasis role="italic">token</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>919</term>
<listitem>
<para>REPLY can only be issued in an object method invocation</para>
</listitem>
</varlistentry>
<varlistentry>
<term>921</term>
<listitem>
<para>Incorrect program line in method source array</para>
</listitem>
</varlistentry>
<varlistentry>
<term>922</term>
<listitem>
<para>::REQUIRES directives must appear before other directive instructions</para>
</listitem>
</varlistentry>
<varlistentry>
<term>923</term>
<listitem>
<para>INTERPRET data must not contain FORWARD</para>
</listitem>
</varlistentry>
<varlistentry>
<term>924</term>
<listitem>
<para>INTERPRET data must not contain REPLY</para>
</listitem>
</varlistentry>
<varlistentry>
<term>925</term>
<listitem>
<para>An ATTRIBUTE method name must be a valid variable name; found "<emphasis role="italic">name</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>926</term>
<listitem>
<para>Incorrect class external; too many parameters</para>
</listitem>
</varlistentry>
<varlistentry>
<term>927</term>
<listitem>
<para>"<emphasis role="italic">classname</emphasis>" is not a valid metaclass</para>
</listitem>
</varlistentry>
<varlistentry>
<term>928</term>
<listitem>
<para>Incorrect class external; class name missing or invalid</para>
</listitem>
</varlistentry>
<varlistentry>
<term>929</term>
<listitem>
<para>Incorrect class external; invalid class server "<emphasis role="italic">servername</emphasis>"</para>
</listitem>
</varlistentry>
<varlistentry>
<term>930</term>
<listitem>
<para>The "..." argument marker can only appear at the end of the argument list</para>
</listitem>
</varlistentry>
<varlistentry>
<term>931</term>
<listitem>
<para>Duplicate ::ATTRIBUTE directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>932</term>
<listitem>
<para>Duplicate ::CONSTANT directive instruction</para>
</listitem>
</varlistentry>
<varlistentry>
<term>933</term>
<listitem>
<para>Abstract methods cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>934</term>
<listitem>
<para>Attribute methods cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>935</term>
<listitem>
<para>External attributes cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>936</term>
<listitem>
<para>External methods cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>937</term>
<listitem>
<para>Attribute methods without a SET or GET designation cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>938</term>
<listitem>
<para>Constant methods cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>939</term>
<listitem>
<para>External routines cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>940</term>
<listitem>
<para>Abstract attributes cannot have a method body</para>
</listitem>
</varlistentry>
<varlistentry>
<term>941</term>
<listitem>
<para>Method or routine code may not contain directive instructions</para>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>

<section id="rxsubcomup">
<title>RXSUBCOM Utility Program</title>
<para>RXSUBCOM issues the following errors:</para>

<section id="ERR116">
<title>Error 116 - The RXSUBCOM parameter REGISTER is incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>RXSUBCOM REGISTER requires the following parameters:
            <variablelist>
                <title>RXSUBCOM REGISTER Environment_Name Dll_Name Procedure_Name</title>
                <varlistentry>
                    <term>
                        Environment_Name
                    </term>
                    <listitem>
                        <para>
                        is the name of the subcommand handler.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
            .           Dll_Name
                    </term>
                    <listitem>
                        <para>
                            is the name of the file containing the subcommand handler routine.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
            .           Procedure_Name
                    </term>
                    <listitem>
                        <para>
                            is the name of the procedure that REXX calls as a subcommand handler.
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
</section>
<section id="ERR117">
<title>Error 117 - The RXSUBCOM parameter DROP is incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>RXSUBCOM DROP requires that the subcommand handler name be specified.
           <variablelist>
               <title>RXSUBCOM DROP Environment_Name [Dll_Name]</title>
               <varlistentry>
                   <term>
                       Environment_Name
                   </term>
                   <listitem>
                       <para>
                       is the name of the subcommand handler.
                       </para>
                   </listitem>
               </varlistentry>
               <varlistentry>
                   <term>
           .           Dll_Name
                   </term>
                   <listitem>
                       <para>
                           is the name of the file containing the subcommand
                           handler routine (optional).
                       </para>
                   </listitem>
               </varlistentry>
           </variablelist>
        </para>
</section>
<section id="ERR118">
<title>Error 118 - The RXSUBCOM parameter LOAD is incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>RXSUBCOM LOAD requires that the subcommand handler name be specified.
            <variablelist>
                <title>RXSUBCOM LOAD Environment_Name [Dll_Name]</title>
                <varlistentry>
                    <term>
                        Environment_Name
                    </term>
                    <listitem>
                        <para>
                        is the name of the subcommand handler.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
            .           Dll_Name
                    </term>
                    <listitem>
                        <para>
                            is the name of the file containing the subcommand
                            handler routine (optional).
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
</section>
<section id="ERR125">
<title>Error 125 - The RXSUBCOM parameter QUERY is incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>RXSUBCOM QUERY requires the environment name be specified.
            <variablelist>
                <title>RXSUBCOM QUERY Environment_Name [Dll_Name]</title>
                <varlistentry>
                    <term>
                        Environment_Name
                    </term>
                    <listitem>
                        <para>
                        is the name of the subcommand handler.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>
            .           Dll_Name
                    </term>
                    <listitem>
                        <para>
                            is the name of the file containing the subcommand
                            handler routine (optional).
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
</section>
</section>
<section id="rxqueueup">
<title>RXQUEUE Utility Program</title>
<para>RXQUEUE issues the following errors:</para>
<section id="ERR119">
<title>Error 119 - The REXX queuing system is not initialized.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The queuing system requires a housekeeping program to run. This program usually runs under the Presentation Manager shell.  The program is not running.</para>
</section>
<section id="ERR120">
<title>Error 120 - The size of the data is incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The data supplied to the RXQUEUE command is too long. The RXQUEUE program accepts data records containing 0 - 65472 bytes.  A record exceeded the allowable limits.</para>
</section>
<section id="ERR121">
<title>Error 121 - Storage for data queues is exhausted.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The queuing system is out of memory.  No more storage is available to store queued data.</para>
</section>
<section id="ERR122">
<title>Error 122 - The name %1 is not a valid queue name.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The queue name contains an invalid character.
        Only the following characters can appear in queue names:  </para>
<programlisting>
        
           'A' .. 'Z', '0' .. '9', '.', '!', '?', '_'
        
        </programlisting>
</section>
<section id="ERR123">
<title>Error 123 - The queue access mode is not correct.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>An internal error occurred in RXQUEUE. The RXQUEUE program tried to access a queue with an incorrect access mode. Correct access modes are LIFO and FIFO.</para>
</section>
<section id="ERR124">
<title>Error 124 - The queue %1 does not exist.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The command attempted to access a nonexistent queue.</para>
</section>
<section id="ERR131">
<title>Error 131 - The syntax of the command is incorrect</title>
<para> </para>
</section>
<section id="ERR132">
<title>Error 132 - System error occurred while processing the command</title>
<para> </para>
</section>
</section>
<section id="rexxcup">
<title>RexxC Utility Program</title>
<para>When RexxC encounters a syntax error in a Rexx program while tokenizing or syntax checking it, RexxC
returns the negated ooRexx error code. In addition, RexxC issues the following errors:</para>
<section id="ERR127">
<title>Error 127 - The REXXC command parameters are incorrect.</title>
<para>
<emphasis role="bold">Explanation:</emphasis>
</para>
<para>The REXXC utility was invoked with zero or more than three parameters.  REXXC accepts the following parameters:
        <itemizedlist>
        <listitem>
<para>To check the syntax of a REXX program: REXXC Program_name [-s]</para>
</listitem>
        <listitem>
<para>To convert a REXX program into a sourceless executable file: REXXC Program_name Output_file_name [-s]</para>
</listitem>
        <listitem>
<para>The -s option will suppress the copyright banner.</para>
</listitem>
        </itemizedlist>
        </para>
</section>
<section id="ERR128">
<title>Error 128 - Output file name must be different from input file name.</title>
<para> </para>
</section>
<section id="ERR129">
<title>Error 129 - SYNTAX: REXXC InProgramName [OutProgramName] [/S]</title>
<para> </para>
</section>
<section id="ERR130">
<title>Error 130 - Without OutProgramName REXXC only performs a syntax check</title>
<para> </para>
</section>
<section id="ERR133">
<title>Error 133 - SYNTAX: REXXC InProgramName [OutProgramName] [-s]</title>
<para> </para>
</section>
</section>
